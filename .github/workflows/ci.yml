name: Continuous Integration
on: [pull_request]

permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: yarn --frozen-lockfile

      - name: Build
        run: yarn build

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ["sinon", "adapters.nestjs", "core"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.18.0"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: yarn --frozen-lockfile

      - name: Test
        run: yarn jest --selectProjects ${{ matrix.project }} --coverage --verbose --passWithNoTests
        env:
          COVERAGE_REPORT_BASE_FILE_NAME: ${{ matrix.project }}
          JEST_JUNIT_OUTPUT_NAME: ${{ matrix.project }}.xml

      - name: Tests Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          reporter: "jest-junit"
          name: Tests Results (${{ matrix.project }})
          path: test-reports/${{ matrix.project }}.xml
          fail-on-error: false

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: codecov-umbrella
          flags: jest,sinon,adapters.nestjs,core
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: coverage
          verbose: true

  test-jest:
    name: Test (jest)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jestVersion: ["^26.0.0", "^27.0.0", "^28.0.0", "^29.0.0"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.18.0"

      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Yarn
        run: yarn --frozen-lockfile

      - name: Specific Jest version
        run: cd packages/testbeds/jest && yarn add -D jest@${{ matrix.jestVersion }}

      - name: Specific Jest version types
        run: yarn add @types/jest@${{ matrix.jestVersion }} --ignore-workspace-root-check

      - name: Test
        run: yarn jest --selectProjects jest --coverage --verbose
        env:
          COVERAGE_REPORT_BASE_FILE_NAME: jest
          JEST_JUNIT_OUTPUT_NAME: jest${{ matrix.jestVersion }}.xml

      - name: Tests Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          reporter: "jest-junit"
          name: Tests Results (jest ${{ matrix.jestVersion }})
          path: test-reports/jest${{ matrix.jestVersion }}.xml
          fail-on-error: false

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: codecov-umbrella
          flags: jest
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          directory: coverage
          verbose: true
